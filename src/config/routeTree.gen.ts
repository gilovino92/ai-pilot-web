/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./../routes/__root";
import { Route as WelcomeRouteImport } from "./../routes/welcome/route";
import { Route as AuthRouteImport } from "./../routes/auth/route";
import { Route as MainRouteImport } from "./../routes/_main/route";
import { Route as MainAppRouteImport } from "./../routes/_main/_app/route";
import { Route as MainAppTasksRouteImport } from "./../routes/_main/_app/tasks/route";
import { Route as MainAppChatRouteImport } from "./../routes/_main/_app/chat/route";
import { Route as MainAppIndexRouteImport } from "./../routes/_main/_app/index/route";
import { Route as MainAppProspectLeadsRouteImport } from "./../routes/_main/_app/prospect/leads/route";
import { Route as MainAppProspectCompaniesRouteImport } from "./../routes/_main/_app/prospect/companies/route";
import { Route as MainAppConversationsLayoutRouteImport } from "./../routes/_main/_app/conversations/_layout/route";
import { Route as MainAppAdminMembersRouteImport } from "./../routes/_main/_app/admin/members/route";
import { Route as MainAppAdminDocumentsRouteImport } from "./../routes/_main/_app/admin/documents/route";
import { Route as MainAppCompaniesIndexRouteImport } from "./../routes/_main/_app/companies/index/route";
import { Route as MainAppConversationsConnectNetworkRouteImport } from "./../routes/_main/_app/conversations/connect/$network/route";
import { Route as MainAppConversationsLayoutNetworkRouteImport } from "./../routes/_main/_app/conversations/_layout/$network/route";
import { Route as MainAppCompaniesCompanyIdLayoutRouteImport } from "./../routes/_main/_app/companies/$companyId/_layout/route";
import { Route as MainAppConversationsLayoutNetworkConversationIdRouteImport } from "./../routes/_main/_app/conversations/_layout/$network/$conversationId/route";
import { Route as MainAppCompaniesCompanyIdLayoutAiInsightsRouteImport } from "./../routes/_main/_app/companies/$companyId/_layout/ai-insights/route";
import { Route as MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteImport } from "./../routes/_main/_app/companies/$companyId/_layout/conversations/_layout/route";
import { Route as MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteImport } from "./../routes/_main/_app/companies/$companyId/_layout/conversations/_layout/$network/route";
import { Route as MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkConversationIdRouteImport } from "./../routes/_main/_app/companies/$companyId/_layout/conversations/_layout/$network/$conversationId/route";

// Create Virtual Routes

const AuthRegisterRouteLazyImport = createFileRoute("/auth/register")();
const AuthLoginRouteLazyImport = createFileRoute("/auth/login")();
const MainAppConversationsImport = createFileRoute(
  "/_main/_app/conversations",
)();
const MainAppDashboardRouteLazyImport = createFileRoute(
  "/_main/_app/dashboard",
)();
const MainAppCompaniesCompanyIdImport = createFileRoute(
  "/_main/_app/companies/$companyId",
)();
const MainAppConversationsConnectIndexRouteLazyImport = createFileRoute(
  "/_main/_app/conversations/connect/",
)();
const MainAppConversationsLayoutIndexRouteLazyImport = createFileRoute(
  "/_main/_app/conversations/_layout/",
)();
const MainAppCompaniesCompanyIdLayoutConversationsImport = createFileRoute(
  "/_main/_app/companies/$companyId/_layout/conversations",
)();
const MainAppCompaniesCompanyIdLayoutTasksRouteLazyImport = createFileRoute(
  "/_main/_app/companies/$companyId/_layout/tasks",
)();
const MainAppCompaniesCompanyIdLayoutDealsRouteLazyImport = createFileRoute(
  "/_main/_app/companies/$companyId/_layout/deals",
)();
const MainAppCompaniesCompanyIdLayoutContactsRouteLazyImport = createFileRoute(
  "/_main/_app/companies/$companyId/_layout/contacts",
)();
const MainAppCompaniesCompanyIdLayoutIndexRouteLazyImport = createFileRoute(
  "/_main/_app/companies/$companyId/_layout/",
)();
const MainAppCompaniesCompanyIdLayoutConversationsLayoutIndexRouteLazyImport =
  createFileRoute(
    "/_main/_app/companies/$companyId/_layout/conversations/_layout/",
  )();

// Create/Update Routes

const WelcomeRouteRoute = WelcomeRouteImport.update({
  id: "/welcome",
  path: "/welcome",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./../routes/welcome/route.lazy").then((d) => d.Route),
);

const AuthRouteRoute = AuthRouteImport.update({
  id: "/auth",
  path: "/auth",
  getParentRoute: () => rootRoute,
} as any);

const MainRouteRoute = MainRouteImport.update({
  id: "/_main",
  getParentRoute: () => rootRoute,
} as any);

const AuthRegisterRouteLazyRoute = AuthRegisterRouteLazyImport.update({
  id: "/register",
  path: "/register",
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import("./../routes/auth/register/route.lazy").then((d) => d.Route),
);

const AuthLoginRouteLazyRoute = AuthLoginRouteLazyImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import("./../routes/auth/login/route.lazy").then((d) => d.Route),
);

const MainAppRouteRoute = MainAppRouteImport.update({
  id: "/_app",
  getParentRoute: () => MainRouteRoute,
} as any).lazy(() =>
  import("./../routes/_main/_app/route.lazy").then((d) => d.Route),
);

const MainAppConversationsRoute = MainAppConversationsImport.update({
  id: "/conversations",
  path: "/conversations",
  getParentRoute: () => MainAppRouteRoute,
} as any);

const MainAppDashboardRouteLazyRoute = MainAppDashboardRouteLazyImport.update({
  id: "/dashboard",
  path: "/dashboard",
  getParentRoute: () => MainAppRouteRoute,
} as any).lazy(() =>
  import("./../routes/_main/_app/dashboard/route.lazy").then((d) => d.Route),
);

const MainAppTasksRouteRoute = MainAppTasksRouteImport.update({
  id: "/tasks",
  path: "/tasks",
  getParentRoute: () => MainAppRouteRoute,
} as any).lazy(() =>
  import("./../routes/_main/_app/tasks/route.lazy").then((d) => d.Route),
);

const MainAppChatRouteRoute = MainAppChatRouteImport.update({
  id: "/chat",
  path: "/chat",
  getParentRoute: () => MainAppRouteRoute,
} as any).lazy(() =>
  import("./../routes/_main/_app/chat/route.lazy").then((d) => d.Route),
);

const MainAppIndexRouteRoute = MainAppIndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => MainAppRouteRoute,
} as any).lazy(() =>
  import("./../routes/_main/_app/index/route.lazy").then((d) => d.Route),
);

const MainAppCompaniesCompanyIdRoute = MainAppCompaniesCompanyIdImport.update({
  id: "/companies/$companyId",
  path: "/companies/$companyId",
  getParentRoute: () => MainAppRouteRoute,
} as any);

const MainAppProspectLeadsRouteRoute = MainAppProspectLeadsRouteImport.update({
  id: "/prospect/leads",
  path: "/prospect/leads",
  getParentRoute: () => MainAppRouteRoute,
} as any).lazy(() =>
  import("./../routes/_main/_app/prospect/leads/route.lazy").then(
    (d) => d.Route,
  ),
);

const MainAppProspectCompaniesRouteRoute =
  MainAppProspectCompaniesRouteImport.update({
    id: "/prospect/companies",
    path: "/prospect/companies",
    getParentRoute: () => MainAppRouteRoute,
  } as any).lazy(() =>
    import("./../routes/_main/_app/prospect/companies/route.lazy").then(
      (d) => d.Route,
    ),
  );

const MainAppConversationsLayoutRouteRoute =
  MainAppConversationsLayoutRouteImport.update({
    id: "/_layout",
    getParentRoute: () => MainAppConversationsRoute,
  } as any).lazy(() =>
    import("./../routes/_main/_app/conversations/_layout/route.lazy").then(
      (d) => d.Route,
    ),
  );

const MainAppAdminMembersRouteRoute = MainAppAdminMembersRouteImport.update({
  id: "/admin/members",
  path: "/admin/members",
  getParentRoute: () => MainAppRouteRoute,
} as any).lazy(() =>
  import("./../routes/_main/_app/admin/members/route.lazy").then(
    (d) => d.Route,
  ),
);

const MainAppAdminDocumentsRouteRoute = MainAppAdminDocumentsRouteImport.update(
  {
    id: "/admin/documents",
    path: "/admin/documents",
    getParentRoute: () => MainAppRouteRoute,
  } as any,
).lazy(() =>
  import("./../routes/_main/_app/admin/documents/route.lazy").then(
    (d) => d.Route,
  ),
);

const MainAppCompaniesIndexRouteRoute = MainAppCompaniesIndexRouteImport.update(
  {
    id: "/companies/",
    path: "/companies/",
    getParentRoute: () => MainAppRouteRoute,
  } as any,
).lazy(() =>
  import("./../routes/_main/_app/companies/index/route.lazy").then(
    (d) => d.Route,
  ),
);

const MainAppConversationsConnectIndexRouteLazyRoute =
  MainAppConversationsConnectIndexRouteLazyImport.update({
    id: "/connect/",
    path: "/connect/",
    getParentRoute: () => MainAppConversationsRoute,
  } as any).lazy(() =>
    import(
      "./../routes/_main/_app/conversations/connect/index/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppConversationsLayoutIndexRouteLazyRoute =
  MainAppConversationsLayoutIndexRouteLazyImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => MainAppConversationsLayoutRouteRoute,
  } as any).lazy(() =>
    import(
      "./../routes/_main/_app/conversations/_layout/index/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppConversationsConnectNetworkRouteRoute =
  MainAppConversationsConnectNetworkRouteImport.update({
    id: "/connect/$network",
    path: "/connect/$network",
    getParentRoute: () => MainAppConversationsRoute,
  } as any).lazy(() =>
    import(
      "./../routes/_main/_app/conversations/connect/$network/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppConversationsLayoutNetworkRouteRoute =
  MainAppConversationsLayoutNetworkRouteImport.update({
    id: "/$network",
    path: "/$network",
    getParentRoute: () => MainAppConversationsLayoutRouteRoute,
  } as any);

const MainAppCompaniesCompanyIdLayoutRouteRoute =
  MainAppCompaniesCompanyIdLayoutRouteImport.update({
    id: "/_layout",
    getParentRoute: () => MainAppCompaniesCompanyIdRoute,
  } as any).lazy(() =>
    import(
      "./../routes/_main/_app/companies/$companyId/_layout/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppCompaniesCompanyIdLayoutConversationsRoute =
  MainAppCompaniesCompanyIdLayoutConversationsImport.update({
    id: "/conversations",
    path: "/conversations",
    getParentRoute: () => MainAppCompaniesCompanyIdLayoutRouteRoute,
  } as any);

const MainAppCompaniesCompanyIdLayoutTasksRouteLazyRoute =
  MainAppCompaniesCompanyIdLayoutTasksRouteLazyImport.update({
    id: "/tasks",
    path: "/tasks",
    getParentRoute: () => MainAppCompaniesCompanyIdLayoutRouteRoute,
  } as any).lazy(() =>
    import(
      "./../routes/_main/_app/companies/$companyId/_layout/tasks/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppCompaniesCompanyIdLayoutDealsRouteLazyRoute =
  MainAppCompaniesCompanyIdLayoutDealsRouteLazyImport.update({
    id: "/deals",
    path: "/deals",
    getParentRoute: () => MainAppCompaniesCompanyIdLayoutRouteRoute,
  } as any).lazy(() =>
    import(
      "./../routes/_main/_app/companies/$companyId/_layout/deals/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppCompaniesCompanyIdLayoutContactsRouteLazyRoute =
  MainAppCompaniesCompanyIdLayoutContactsRouteLazyImport.update({
    id: "/contacts",
    path: "/contacts",
    getParentRoute: () => MainAppCompaniesCompanyIdLayoutRouteRoute,
  } as any).lazy(() =>
    import(
      "./../routes/_main/_app/companies/$companyId/_layout/contacts/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppCompaniesCompanyIdLayoutIndexRouteLazyRoute =
  MainAppCompaniesCompanyIdLayoutIndexRouteLazyImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => MainAppCompaniesCompanyIdLayoutRouteRoute,
  } as any).lazy(() =>
    import(
      "./../routes/_main/_app/companies/$companyId/_layout/index/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppConversationsLayoutNetworkConversationIdRouteRoute =
  MainAppConversationsLayoutNetworkConversationIdRouteImport.update({
    id: "/$conversationId",
    path: "/$conversationId",
    getParentRoute: () => MainAppConversationsLayoutNetworkRouteRoute,
  } as any).lazy(() =>
    import(
      "./../routes/_main/_app/conversations/_layout/$network/$conversationId/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppCompaniesCompanyIdLayoutAiInsightsRouteRoute =
  MainAppCompaniesCompanyIdLayoutAiInsightsRouteImport.update({
    id: "/ai-insights",
    path: "/ai-insights",
    getParentRoute: () => MainAppCompaniesCompanyIdLayoutRouteRoute,
  } as any).lazy(() =>
    import(
      "./../routes/_main/_app/companies/$companyId/_layout/ai-insights/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRoute =
  MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteImport.update({
    id: "/_layout",
    getParentRoute: () => MainAppCompaniesCompanyIdLayoutConversationsRoute,
  } as any).lazy(() =>
    import(
      "./../routes/_main/_app/companies/$companyId/_layout/conversations/_layout/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppCompaniesCompanyIdLayoutConversationsLayoutIndexRouteLazyRoute =
  MainAppCompaniesCompanyIdLayoutConversationsLayoutIndexRouteLazyImport.update(
    {
      id: "/",
      path: "/",
      getParentRoute: () =>
        MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      "./../routes/_main/_app/companies/$companyId/_layout/conversations/_layout/index/route.lazy"
    ).then((d) => d.Route),
  );

const MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRoute =
  MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteImport.update({
    id: "/$network",
    path: "/$network",
    getParentRoute: () =>
      MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRoute,
  } as any);

const MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkConversationIdRouteRoute =
  MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkConversationIdRouteImport.update(
    {
      id: "/$conversationId",
      path: "/$conversationId",
      getParentRoute: () =>
        MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRoute,
    } as any,
  ).lazy(() =>
    import(
      "./../routes/_main/_app/companies/$companyId/_layout/conversations/_layout/$network/$conversationId/route.lazy"
    ).then((d) => d.Route),
  );

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_main": {
      id: "/_main";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof MainRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/auth": {
      id: "/auth";
      path: "/auth";
      fullPath: "/auth";
      preLoaderRoute: typeof AuthRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/welcome": {
      id: "/welcome";
      path: "/welcome";
      fullPath: "/welcome";
      preLoaderRoute: typeof WelcomeRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/_main/_app": {
      id: "/_main/_app";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof MainAppRouteImport;
      parentRoute: typeof MainRouteImport;
    };
    "/auth/login": {
      id: "/auth/login";
      path: "/login";
      fullPath: "/auth/login";
      preLoaderRoute: typeof AuthLoginRouteLazyImport;
      parentRoute: typeof AuthRouteImport;
    };
    "/auth/register": {
      id: "/auth/register";
      path: "/register";
      fullPath: "/auth/register";
      preLoaderRoute: typeof AuthRegisterRouteLazyImport;
      parentRoute: typeof AuthRouteImport;
    };
    "/_main/_app/": {
      id: "/_main/_app/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof MainAppIndexRouteImport;
      parentRoute: typeof MainAppRouteImport;
    };
    "/_main/_app/chat": {
      id: "/_main/_app/chat";
      path: "/chat";
      fullPath: "/chat";
      preLoaderRoute: typeof MainAppChatRouteImport;
      parentRoute: typeof MainAppRouteImport;
    };
    "/_main/_app/tasks": {
      id: "/_main/_app/tasks";
      path: "/tasks";
      fullPath: "/tasks";
      preLoaderRoute: typeof MainAppTasksRouteImport;
      parentRoute: typeof MainAppRouteImport;
    };
    "/_main/_app/dashboard": {
      id: "/_main/_app/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof MainAppDashboardRouteLazyImport;
      parentRoute: typeof MainAppRouteImport;
    };
    "/_main/_app/companies/": {
      id: "/_main/_app/companies/";
      path: "/companies";
      fullPath: "/companies";
      preLoaderRoute: typeof MainAppCompaniesIndexRouteImport;
      parentRoute: typeof MainAppRouteImport;
    };
    "/_main/_app/admin/documents": {
      id: "/_main/_app/admin/documents";
      path: "/admin/documents";
      fullPath: "/admin/documents";
      preLoaderRoute: typeof MainAppAdminDocumentsRouteImport;
      parentRoute: typeof MainAppRouteImport;
    };
    "/_main/_app/admin/members": {
      id: "/_main/_app/admin/members";
      path: "/admin/members";
      fullPath: "/admin/members";
      preLoaderRoute: typeof MainAppAdminMembersRouteImport;
      parentRoute: typeof MainAppRouteImport;
    };
    "/_main/_app/conversations": {
      id: "/_main/_app/conversations";
      path: "/conversations";
      fullPath: "/conversations";
      preLoaderRoute: typeof MainAppConversationsImport;
      parentRoute: typeof MainAppRouteImport;
    };
    "/_main/_app/conversations/_layout": {
      id: "/_main/_app/conversations/_layout";
      path: "/conversations";
      fullPath: "/conversations";
      preLoaderRoute: typeof MainAppConversationsLayoutRouteImport;
      parentRoute: typeof MainAppConversationsRoute;
    };
    "/_main/_app/prospect/companies": {
      id: "/_main/_app/prospect/companies";
      path: "/prospect/companies";
      fullPath: "/prospect/companies";
      preLoaderRoute: typeof MainAppProspectCompaniesRouteImport;
      parentRoute: typeof MainAppRouteImport;
    };
    "/_main/_app/prospect/leads": {
      id: "/_main/_app/prospect/leads";
      path: "/prospect/leads";
      fullPath: "/prospect/leads";
      preLoaderRoute: typeof MainAppProspectLeadsRouteImport;
      parentRoute: typeof MainAppRouteImport;
    };
    "/_main/_app/companies/$companyId": {
      id: "/_main/_app/companies/$companyId";
      path: "/companies/$companyId";
      fullPath: "/companies/$companyId";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdImport;
      parentRoute: typeof MainAppRouteImport;
    };
    "/_main/_app/companies/$companyId/_layout": {
      id: "/_main/_app/companies/$companyId/_layout";
      path: "/companies/$companyId";
      fullPath: "/companies/$companyId";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdLayoutRouteImport;
      parentRoute: typeof MainAppCompaniesCompanyIdRoute;
    };
    "/_main/_app/conversations/_layout/$network": {
      id: "/_main/_app/conversations/_layout/$network";
      path: "/$network";
      fullPath: "/conversations/$network";
      preLoaderRoute: typeof MainAppConversationsLayoutNetworkRouteImport;
      parentRoute: typeof MainAppConversationsLayoutRouteImport;
    };
    "/_main/_app/conversations/connect/$network": {
      id: "/_main/_app/conversations/connect/$network";
      path: "/connect/$network";
      fullPath: "/conversations/connect/$network";
      preLoaderRoute: typeof MainAppConversationsConnectNetworkRouteImport;
      parentRoute: typeof MainAppConversationsImport;
    };
    "/_main/_app/conversations/_layout/": {
      id: "/_main/_app/conversations/_layout/";
      path: "/";
      fullPath: "/conversations/";
      preLoaderRoute: typeof MainAppConversationsLayoutIndexRouteLazyImport;
      parentRoute: typeof MainAppConversationsLayoutRouteImport;
    };
    "/_main/_app/conversations/connect/": {
      id: "/_main/_app/conversations/connect/";
      path: "/connect";
      fullPath: "/conversations/connect";
      preLoaderRoute: typeof MainAppConversationsConnectIndexRouteLazyImport;
      parentRoute: typeof MainAppConversationsImport;
    };
    "/_main/_app/companies/$companyId/_layout/ai-insights": {
      id: "/_main/_app/companies/$companyId/_layout/ai-insights";
      path: "/ai-insights";
      fullPath: "/companies/$companyId/ai-insights";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdLayoutAiInsightsRouteImport;
      parentRoute: typeof MainAppCompaniesCompanyIdLayoutRouteImport;
    };
    "/_main/_app/conversations/_layout/$network/$conversationId": {
      id: "/_main/_app/conversations/_layout/$network/$conversationId";
      path: "/$conversationId";
      fullPath: "/conversations/$network/$conversationId";
      preLoaderRoute: typeof MainAppConversationsLayoutNetworkConversationIdRouteImport;
      parentRoute: typeof MainAppConversationsLayoutNetworkRouteImport;
    };
    "/_main/_app/companies/$companyId/_layout/": {
      id: "/_main/_app/companies/$companyId/_layout/";
      path: "/";
      fullPath: "/companies/$companyId/";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdLayoutIndexRouteLazyImport;
      parentRoute: typeof MainAppCompaniesCompanyIdLayoutRouteImport;
    };
    "/_main/_app/companies/$companyId/_layout/contacts": {
      id: "/_main/_app/companies/$companyId/_layout/contacts";
      path: "/contacts";
      fullPath: "/companies/$companyId/contacts";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdLayoutContactsRouteLazyImport;
      parentRoute: typeof MainAppCompaniesCompanyIdLayoutRouteImport;
    };
    "/_main/_app/companies/$companyId/_layout/deals": {
      id: "/_main/_app/companies/$companyId/_layout/deals";
      path: "/deals";
      fullPath: "/companies/$companyId/deals";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdLayoutDealsRouteLazyImport;
      parentRoute: typeof MainAppCompaniesCompanyIdLayoutRouteImport;
    };
    "/_main/_app/companies/$companyId/_layout/tasks": {
      id: "/_main/_app/companies/$companyId/_layout/tasks";
      path: "/tasks";
      fullPath: "/companies/$companyId/tasks";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdLayoutTasksRouteLazyImport;
      parentRoute: typeof MainAppCompaniesCompanyIdLayoutRouteImport;
    };
    "/_main/_app/companies/$companyId/_layout/conversations": {
      id: "/_main/_app/companies/$companyId/_layout/conversations";
      path: "/conversations";
      fullPath: "/companies/$companyId/conversations";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsImport;
      parentRoute: typeof MainAppCompaniesCompanyIdLayoutRouteImport;
    };
    "/_main/_app/companies/$companyId/_layout/conversations/_layout": {
      id: "/_main/_app/companies/$companyId/_layout/conversations/_layout";
      path: "/conversations";
      fullPath: "/companies/$companyId/conversations";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteImport;
      parentRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsRoute;
    };
    "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network": {
      id: "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network";
      path: "/$network";
      fullPath: "/companies/$companyId/conversations/$network";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteImport;
      parentRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteImport;
    };
    "/_main/_app/companies/$companyId/_layout/conversations/_layout/": {
      id: "/_main/_app/companies/$companyId/_layout/conversations/_layout/";
      path: "/";
      fullPath: "/companies/$companyId/conversations/";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutIndexRouteLazyImport;
      parentRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteImport;
    };
    "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network/$conversationId": {
      id: "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network/$conversationId";
      path: "/$conversationId";
      fullPath: "/companies/$companyId/conversations/$network/$conversationId";
      preLoaderRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkConversationIdRouteImport;
      parentRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteImport;
    };
  }
}

// Create and export the route tree

interface MainAppConversationsLayoutNetworkRouteRouteChildren {
  MainAppConversationsLayoutNetworkConversationIdRouteRoute: typeof MainAppConversationsLayoutNetworkConversationIdRouteRoute;
}

const MainAppConversationsLayoutNetworkRouteRouteChildren: MainAppConversationsLayoutNetworkRouteRouteChildren =
  {
    MainAppConversationsLayoutNetworkConversationIdRouteRoute:
      MainAppConversationsLayoutNetworkConversationIdRouteRoute,
  };

const MainAppConversationsLayoutNetworkRouteRouteWithChildren =
  MainAppConversationsLayoutNetworkRouteRoute._addFileChildren(
    MainAppConversationsLayoutNetworkRouteRouteChildren,
  );

interface MainAppConversationsLayoutRouteRouteChildren {
  MainAppConversationsLayoutNetworkRouteRoute: typeof MainAppConversationsLayoutNetworkRouteRouteWithChildren;
  MainAppConversationsLayoutIndexRouteLazyRoute: typeof MainAppConversationsLayoutIndexRouteLazyRoute;
}

const MainAppConversationsLayoutRouteRouteChildren: MainAppConversationsLayoutRouteRouteChildren =
  {
    MainAppConversationsLayoutNetworkRouteRoute:
      MainAppConversationsLayoutNetworkRouteRouteWithChildren,
    MainAppConversationsLayoutIndexRouteLazyRoute:
      MainAppConversationsLayoutIndexRouteLazyRoute,
  };

const MainAppConversationsLayoutRouteRouteWithChildren =
  MainAppConversationsLayoutRouteRoute._addFileChildren(
    MainAppConversationsLayoutRouteRouteChildren,
  );

interface MainAppConversationsRouteChildren {
  MainAppConversationsLayoutRouteRoute: typeof MainAppConversationsLayoutRouteRouteWithChildren;
  MainAppConversationsConnectNetworkRouteRoute: typeof MainAppConversationsConnectNetworkRouteRoute;
  MainAppConversationsConnectIndexRouteLazyRoute: typeof MainAppConversationsConnectIndexRouteLazyRoute;
}

const MainAppConversationsRouteChildren: MainAppConversationsRouteChildren = {
  MainAppConversationsLayoutRouteRoute:
    MainAppConversationsLayoutRouteRouteWithChildren,
  MainAppConversationsConnectNetworkRouteRoute:
    MainAppConversationsConnectNetworkRouteRoute,
  MainAppConversationsConnectIndexRouteLazyRoute:
    MainAppConversationsConnectIndexRouteLazyRoute,
};

const MainAppConversationsRouteWithChildren =
  MainAppConversationsRoute._addFileChildren(MainAppConversationsRouteChildren);

interface MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRouteChildren {
  MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkConversationIdRouteRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkConversationIdRouteRoute;
}

const MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRouteChildren: MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRouteChildren =
  {
    MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkConversationIdRouteRoute:
      MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkConversationIdRouteRoute,
  };

const MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRouteWithChildren =
  MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRoute._addFileChildren(
    MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRouteChildren,
  );

interface MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRouteChildren {
  MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRouteWithChildren;
  MainAppCompaniesCompanyIdLayoutConversationsLayoutIndexRouteLazyRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutIndexRouteLazyRoute;
}

const MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRouteChildren: MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRouteChildren =
  {
    MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRoute:
      MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRouteWithChildren,
    MainAppCompaniesCompanyIdLayoutConversationsLayoutIndexRouteLazyRoute:
      MainAppCompaniesCompanyIdLayoutConversationsLayoutIndexRouteLazyRoute,
  };

const MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRouteWithChildren =
  MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRoute._addFileChildren(
    MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRouteChildren,
  );

interface MainAppCompaniesCompanyIdLayoutConversationsRouteChildren {
  MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRouteWithChildren;
}

const MainAppCompaniesCompanyIdLayoutConversationsRouteChildren: MainAppCompaniesCompanyIdLayoutConversationsRouteChildren =
  {
    MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRoute:
      MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRouteWithChildren,
  };

const MainAppCompaniesCompanyIdLayoutConversationsRouteWithChildren =
  MainAppCompaniesCompanyIdLayoutConversationsRoute._addFileChildren(
    MainAppCompaniesCompanyIdLayoutConversationsRouteChildren,
  );

interface MainAppCompaniesCompanyIdLayoutRouteRouteChildren {
  MainAppCompaniesCompanyIdLayoutAiInsightsRouteRoute: typeof MainAppCompaniesCompanyIdLayoutAiInsightsRouteRoute;
  MainAppCompaniesCompanyIdLayoutIndexRouteLazyRoute: typeof MainAppCompaniesCompanyIdLayoutIndexRouteLazyRoute;
  MainAppCompaniesCompanyIdLayoutContactsRouteLazyRoute: typeof MainAppCompaniesCompanyIdLayoutContactsRouteLazyRoute;
  MainAppCompaniesCompanyIdLayoutDealsRouteLazyRoute: typeof MainAppCompaniesCompanyIdLayoutDealsRouteLazyRoute;
  MainAppCompaniesCompanyIdLayoutTasksRouteLazyRoute: typeof MainAppCompaniesCompanyIdLayoutTasksRouteLazyRoute;
  MainAppCompaniesCompanyIdLayoutConversationsRoute: typeof MainAppCompaniesCompanyIdLayoutConversationsRouteWithChildren;
}

const MainAppCompaniesCompanyIdLayoutRouteRouteChildren: MainAppCompaniesCompanyIdLayoutRouteRouteChildren =
  {
    MainAppCompaniesCompanyIdLayoutAiInsightsRouteRoute:
      MainAppCompaniesCompanyIdLayoutAiInsightsRouteRoute,
    MainAppCompaniesCompanyIdLayoutIndexRouteLazyRoute:
      MainAppCompaniesCompanyIdLayoutIndexRouteLazyRoute,
    MainAppCompaniesCompanyIdLayoutContactsRouteLazyRoute:
      MainAppCompaniesCompanyIdLayoutContactsRouteLazyRoute,
    MainAppCompaniesCompanyIdLayoutDealsRouteLazyRoute:
      MainAppCompaniesCompanyIdLayoutDealsRouteLazyRoute,
    MainAppCompaniesCompanyIdLayoutTasksRouteLazyRoute:
      MainAppCompaniesCompanyIdLayoutTasksRouteLazyRoute,
    MainAppCompaniesCompanyIdLayoutConversationsRoute:
      MainAppCompaniesCompanyIdLayoutConversationsRouteWithChildren,
  };

const MainAppCompaniesCompanyIdLayoutRouteRouteWithChildren =
  MainAppCompaniesCompanyIdLayoutRouteRoute._addFileChildren(
    MainAppCompaniesCompanyIdLayoutRouteRouteChildren,
  );

interface MainAppCompaniesCompanyIdRouteChildren {
  MainAppCompaniesCompanyIdLayoutRouteRoute: typeof MainAppCompaniesCompanyIdLayoutRouteRouteWithChildren;
}

const MainAppCompaniesCompanyIdRouteChildren: MainAppCompaniesCompanyIdRouteChildren =
  {
    MainAppCompaniesCompanyIdLayoutRouteRoute:
      MainAppCompaniesCompanyIdLayoutRouteRouteWithChildren,
  };

const MainAppCompaniesCompanyIdRouteWithChildren =
  MainAppCompaniesCompanyIdRoute._addFileChildren(
    MainAppCompaniesCompanyIdRouteChildren,
  );

interface MainAppRouteRouteChildren {
  MainAppIndexRouteRoute: typeof MainAppIndexRouteRoute;
  MainAppChatRouteRoute: typeof MainAppChatRouteRoute;
  MainAppTasksRouteRoute: typeof MainAppTasksRouteRoute;
  MainAppDashboardRouteLazyRoute: typeof MainAppDashboardRouteLazyRoute;
  MainAppCompaniesIndexRouteRoute: typeof MainAppCompaniesIndexRouteRoute;
  MainAppAdminDocumentsRouteRoute: typeof MainAppAdminDocumentsRouteRoute;
  MainAppAdminMembersRouteRoute: typeof MainAppAdminMembersRouteRoute;
  MainAppConversationsRoute: typeof MainAppConversationsRouteWithChildren;
  MainAppProspectCompaniesRouteRoute: typeof MainAppProspectCompaniesRouteRoute;
  MainAppProspectLeadsRouteRoute: typeof MainAppProspectLeadsRouteRoute;
  MainAppCompaniesCompanyIdRoute: typeof MainAppCompaniesCompanyIdRouteWithChildren;
}

const MainAppRouteRouteChildren: MainAppRouteRouteChildren = {
  MainAppIndexRouteRoute: MainAppIndexRouteRoute,
  MainAppChatRouteRoute: MainAppChatRouteRoute,
  MainAppTasksRouteRoute: MainAppTasksRouteRoute,
  MainAppDashboardRouteLazyRoute: MainAppDashboardRouteLazyRoute,
  MainAppCompaniesIndexRouteRoute: MainAppCompaniesIndexRouteRoute,
  MainAppAdminDocumentsRouteRoute: MainAppAdminDocumentsRouteRoute,
  MainAppAdminMembersRouteRoute: MainAppAdminMembersRouteRoute,
  MainAppConversationsRoute: MainAppConversationsRouteWithChildren,
  MainAppProspectCompaniesRouteRoute: MainAppProspectCompaniesRouteRoute,
  MainAppProspectLeadsRouteRoute: MainAppProspectLeadsRouteRoute,
  MainAppCompaniesCompanyIdRoute: MainAppCompaniesCompanyIdRouteWithChildren,
};

const MainAppRouteRouteWithChildren = MainAppRouteRoute._addFileChildren(
  MainAppRouteRouteChildren,
);

interface MainRouteRouteChildren {
  MainAppRouteRoute: typeof MainAppRouteRouteWithChildren;
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainAppRouteRoute: MainAppRouteRouteWithChildren,
};

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
);

interface AuthRouteRouteChildren {
  AuthLoginRouteLazyRoute: typeof AuthLoginRouteLazyRoute;
  AuthRegisterRouteLazyRoute: typeof AuthRegisterRouteLazyRoute;
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRouteLazyRoute: AuthLoginRouteLazyRoute,
  AuthRegisterRouteLazyRoute: AuthRegisterRouteLazyRoute,
};

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
);

export interface FileRoutesByFullPath {
  "": typeof MainAppRouteRouteWithChildren;
  "/auth": typeof AuthRouteRouteWithChildren;
  "/welcome": typeof WelcomeRouteRoute;
  "/auth/login": typeof AuthLoginRouteLazyRoute;
  "/auth/register": typeof AuthRegisterRouteLazyRoute;
  "/": typeof MainAppIndexRouteRoute;
  "/chat": typeof MainAppChatRouteRoute;
  "/tasks": typeof MainAppTasksRouteRoute;
  "/dashboard": typeof MainAppDashboardRouteLazyRoute;
  "/companies": typeof MainAppCompaniesIndexRouteRoute;
  "/admin/documents": typeof MainAppAdminDocumentsRouteRoute;
  "/admin/members": typeof MainAppAdminMembersRouteRoute;
  "/conversations": typeof MainAppConversationsLayoutRouteRouteWithChildren;
  "/prospect/companies": typeof MainAppProspectCompaniesRouteRoute;
  "/prospect/leads": typeof MainAppProspectLeadsRouteRoute;
  "/companies/$companyId": typeof MainAppCompaniesCompanyIdLayoutRouteRouteWithChildren;
  "/conversations/$network": typeof MainAppConversationsLayoutNetworkRouteRouteWithChildren;
  "/conversations/connect/$network": typeof MainAppConversationsConnectNetworkRouteRoute;
  "/conversations/": typeof MainAppConversationsLayoutIndexRouteLazyRoute;
  "/conversations/connect": typeof MainAppConversationsConnectIndexRouteLazyRoute;
  "/companies/$companyId/ai-insights": typeof MainAppCompaniesCompanyIdLayoutAiInsightsRouteRoute;
  "/conversations/$network/$conversationId": typeof MainAppConversationsLayoutNetworkConversationIdRouteRoute;
  "/companies/$companyId/": typeof MainAppCompaniesCompanyIdLayoutIndexRouteLazyRoute;
  "/companies/$companyId/contacts": typeof MainAppCompaniesCompanyIdLayoutContactsRouteLazyRoute;
  "/companies/$companyId/deals": typeof MainAppCompaniesCompanyIdLayoutDealsRouteLazyRoute;
  "/companies/$companyId/tasks": typeof MainAppCompaniesCompanyIdLayoutTasksRouteLazyRoute;
  "/companies/$companyId/conversations": typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRouteWithChildren;
  "/companies/$companyId/conversations/$network": typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRouteWithChildren;
  "/companies/$companyId/conversations/": typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutIndexRouteLazyRoute;
  "/companies/$companyId/conversations/$network/$conversationId": typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkConversationIdRouteRoute;
}

export interface FileRoutesByTo {
  "": typeof MainRouteRouteWithChildren;
  "/auth": typeof AuthRouteRouteWithChildren;
  "/welcome": typeof WelcomeRouteRoute;
  "/auth/login": typeof AuthLoginRouteLazyRoute;
  "/auth/register": typeof AuthRegisterRouteLazyRoute;
  "/": typeof MainAppIndexRouteRoute;
  "/chat": typeof MainAppChatRouteRoute;
  "/tasks": typeof MainAppTasksRouteRoute;
  "/dashboard": typeof MainAppDashboardRouteLazyRoute;
  "/companies": typeof MainAppCompaniesIndexRouteRoute;
  "/admin/documents": typeof MainAppAdminDocumentsRouteRoute;
  "/admin/members": typeof MainAppAdminMembersRouteRoute;
  "/conversations": typeof MainAppConversationsLayoutIndexRouteLazyRoute;
  "/prospect/companies": typeof MainAppProspectCompaniesRouteRoute;
  "/prospect/leads": typeof MainAppProspectLeadsRouteRoute;
  "/companies/$companyId": typeof MainAppCompaniesCompanyIdLayoutIndexRouteLazyRoute;
  "/conversations/$network": typeof MainAppConversationsLayoutNetworkRouteRouteWithChildren;
  "/conversations/connect/$network": typeof MainAppConversationsConnectNetworkRouteRoute;
  "/conversations/connect": typeof MainAppConversationsConnectIndexRouteLazyRoute;
  "/companies/$companyId/ai-insights": typeof MainAppCompaniesCompanyIdLayoutAiInsightsRouteRoute;
  "/conversations/$network/$conversationId": typeof MainAppConversationsLayoutNetworkConversationIdRouteRoute;
  "/companies/$companyId/contacts": typeof MainAppCompaniesCompanyIdLayoutContactsRouteLazyRoute;
  "/companies/$companyId/deals": typeof MainAppCompaniesCompanyIdLayoutDealsRouteLazyRoute;
  "/companies/$companyId/tasks": typeof MainAppCompaniesCompanyIdLayoutTasksRouteLazyRoute;
  "/companies/$companyId/conversations": typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutIndexRouteLazyRoute;
  "/companies/$companyId/conversations/$network": typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRouteWithChildren;
  "/companies/$companyId/conversations/$network/$conversationId": typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkConversationIdRouteRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_main": typeof MainRouteRouteWithChildren;
  "/auth": typeof AuthRouteRouteWithChildren;
  "/welcome": typeof WelcomeRouteRoute;
  "/_main/_app": typeof MainAppRouteRouteWithChildren;
  "/auth/login": typeof AuthLoginRouteLazyRoute;
  "/auth/register": typeof AuthRegisterRouteLazyRoute;
  "/_main/_app/": typeof MainAppIndexRouteRoute;
  "/_main/_app/chat": typeof MainAppChatRouteRoute;
  "/_main/_app/tasks": typeof MainAppTasksRouteRoute;
  "/_main/_app/dashboard": typeof MainAppDashboardRouteLazyRoute;
  "/_main/_app/companies/": typeof MainAppCompaniesIndexRouteRoute;
  "/_main/_app/admin/documents": typeof MainAppAdminDocumentsRouteRoute;
  "/_main/_app/admin/members": typeof MainAppAdminMembersRouteRoute;
  "/_main/_app/conversations": typeof MainAppConversationsRouteWithChildren;
  "/_main/_app/conversations/_layout": typeof MainAppConversationsLayoutRouteRouteWithChildren;
  "/_main/_app/prospect/companies": typeof MainAppProspectCompaniesRouteRoute;
  "/_main/_app/prospect/leads": typeof MainAppProspectLeadsRouteRoute;
  "/_main/_app/companies/$companyId": typeof MainAppCompaniesCompanyIdRouteWithChildren;
  "/_main/_app/companies/$companyId/_layout": typeof MainAppCompaniesCompanyIdLayoutRouteRouteWithChildren;
  "/_main/_app/conversations/_layout/$network": typeof MainAppConversationsLayoutNetworkRouteRouteWithChildren;
  "/_main/_app/conversations/connect/$network": typeof MainAppConversationsConnectNetworkRouteRoute;
  "/_main/_app/conversations/_layout/": typeof MainAppConversationsLayoutIndexRouteLazyRoute;
  "/_main/_app/conversations/connect/": typeof MainAppConversationsConnectIndexRouteLazyRoute;
  "/_main/_app/companies/$companyId/_layout/ai-insights": typeof MainAppCompaniesCompanyIdLayoutAiInsightsRouteRoute;
  "/_main/_app/conversations/_layout/$network/$conversationId": typeof MainAppConversationsLayoutNetworkConversationIdRouteRoute;
  "/_main/_app/companies/$companyId/_layout/": typeof MainAppCompaniesCompanyIdLayoutIndexRouteLazyRoute;
  "/_main/_app/companies/$companyId/_layout/contacts": typeof MainAppCompaniesCompanyIdLayoutContactsRouteLazyRoute;
  "/_main/_app/companies/$companyId/_layout/deals": typeof MainAppCompaniesCompanyIdLayoutDealsRouteLazyRoute;
  "/_main/_app/companies/$companyId/_layout/tasks": typeof MainAppCompaniesCompanyIdLayoutTasksRouteLazyRoute;
  "/_main/_app/companies/$companyId/_layout/conversations": typeof MainAppCompaniesCompanyIdLayoutConversationsRouteWithChildren;
  "/_main/_app/companies/$companyId/_layout/conversations/_layout": typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutRouteRouteWithChildren;
  "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network": typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkRouteRouteWithChildren;
  "/_main/_app/companies/$companyId/_layout/conversations/_layout/": typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutIndexRouteLazyRoute;
  "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network/$conversationId": typeof MainAppCompaniesCompanyIdLayoutConversationsLayoutNetworkConversationIdRouteRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | ""
    | "/auth"
    | "/welcome"
    | "/auth/login"
    | "/auth/register"
    | "/"
    | "/chat"
    | "/tasks"
    | "/dashboard"
    | "/companies"
    | "/admin/documents"
    | "/admin/members"
    | "/conversations"
    | "/prospect/companies"
    | "/prospect/leads"
    | "/companies/$companyId"
    | "/conversations/$network"
    | "/conversations/connect/$network"
    | "/conversations/"
    | "/conversations/connect"
    | "/companies/$companyId/ai-insights"
    | "/conversations/$network/$conversationId"
    | "/companies/$companyId/"
    | "/companies/$companyId/contacts"
    | "/companies/$companyId/deals"
    | "/companies/$companyId/tasks"
    | "/companies/$companyId/conversations"
    | "/companies/$companyId/conversations/$network"
    | "/companies/$companyId/conversations/"
    | "/companies/$companyId/conversations/$network/$conversationId";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | ""
    | "/auth"
    | "/welcome"
    | "/auth/login"
    | "/auth/register"
    | "/"
    | "/chat"
    | "/tasks"
    | "/dashboard"
    | "/companies"
    | "/admin/documents"
    | "/admin/members"
    | "/conversations"
    | "/prospect/companies"
    | "/prospect/leads"
    | "/companies/$companyId"
    | "/conversations/$network"
    | "/conversations/connect/$network"
    | "/conversations/connect"
    | "/companies/$companyId/ai-insights"
    | "/conversations/$network/$conversationId"
    | "/companies/$companyId/contacts"
    | "/companies/$companyId/deals"
    | "/companies/$companyId/tasks"
    | "/companies/$companyId/conversations"
    | "/companies/$companyId/conversations/$network"
    | "/companies/$companyId/conversations/$network/$conversationId";
  id:
    | "__root__"
    | "/_main"
    | "/auth"
    | "/welcome"
    | "/_main/_app"
    | "/auth/login"
    | "/auth/register"
    | "/_main/_app/"
    | "/_main/_app/chat"
    | "/_main/_app/tasks"
    | "/_main/_app/dashboard"
    | "/_main/_app/companies/"
    | "/_main/_app/admin/documents"
    | "/_main/_app/admin/members"
    | "/_main/_app/conversations"
    | "/_main/_app/conversations/_layout"
    | "/_main/_app/prospect/companies"
    | "/_main/_app/prospect/leads"
    | "/_main/_app/companies/$companyId"
    | "/_main/_app/companies/$companyId/_layout"
    | "/_main/_app/conversations/_layout/$network"
    | "/_main/_app/conversations/connect/$network"
    | "/_main/_app/conversations/_layout/"
    | "/_main/_app/conversations/connect/"
    | "/_main/_app/companies/$companyId/_layout/ai-insights"
    | "/_main/_app/conversations/_layout/$network/$conversationId"
    | "/_main/_app/companies/$companyId/_layout/"
    | "/_main/_app/companies/$companyId/_layout/contacts"
    | "/_main/_app/companies/$companyId/_layout/deals"
    | "/_main/_app/companies/$companyId/_layout/tasks"
    | "/_main/_app/companies/$companyId/_layout/conversations"
    | "/_main/_app/companies/$companyId/_layout/conversations/_layout"
    | "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network"
    | "/_main/_app/companies/$companyId/_layout/conversations/_layout/"
    | "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network/$conversationId";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  MainRouteRoute: typeof MainRouteRouteWithChildren;
  AuthRouteRoute: typeof AuthRouteRouteWithChildren;
  WelcomeRouteRoute: typeof WelcomeRouteRoute;
}

const rootRouteChildren: RootRouteChildren = {
  MainRouteRoute: MainRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  WelcomeRouteRoute: WelcomeRouteRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_main",
        "/auth",
        "/welcome"
      ]
    },
    "/_main": {
      "filePath": "_main/route.tsx",
      "children": [
        "/_main/_app"
      ]
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/login",
        "/auth/register"
      ]
    },
    "/welcome": {
      "filePath": "welcome/route.tsx"
    },
    "/_main/_app": {
      "filePath": "_main/_app/route.tsx",
      "parent": "/_main",
      "children": [
        "/_main/_app/",
        "/_main/_app/chat",
        "/_main/_app/tasks",
        "/_main/_app/dashboard",
        "/_main/_app/companies/",
        "/_main/_app/admin/documents",
        "/_main/_app/admin/members",
        "/_main/_app/conversations",
        "/_main/_app/prospect/companies",
        "/_main/_app/prospect/leads",
        "/_main/_app/companies/$companyId"
      ]
    },
    "/auth/login": {
      "filePath": "auth/login/route.lazy.tsx",
      "parent": "/auth"
    },
    "/auth/register": {
      "filePath": "auth/register/route.lazy.tsx",
      "parent": "/auth"
    },
    "/_main/_app/": {
      "filePath": "_main/_app/index/route.tsx",
      "parent": "/_main/_app"
    },
    "/_main/_app/chat": {
      "filePath": "_main/_app/chat/route.tsx",
      "parent": "/_main/_app"
    },
    "/_main/_app/tasks": {
      "filePath": "_main/_app/tasks/route.tsx",
      "parent": "/_main/_app"
    },
    "/_main/_app/dashboard": {
      "filePath": "_main/_app/dashboard/route.lazy.tsx",
      "parent": "/_main/_app"
    },
    "/_main/_app/companies/": {
      "filePath": "_main/_app/companies/index/route.tsx",
      "parent": "/_main/_app"
    },
    "/_main/_app/admin/documents": {
      "filePath": "_main/_app/admin/documents/route.tsx",
      "parent": "/_main/_app"
    },
    "/_main/_app/admin/members": {
      "filePath": "_main/_app/admin/members/route.tsx",
      "parent": "/_main/_app"
    },
    "/_main/_app/conversations": {
      "filePath": "_main/_app/conversations/_layout",
      "parent": "/_main/_app",
      "children": [
        "/_main/_app/conversations/_layout",
        "/_main/_app/conversations/connect/$network",
        "/_main/_app/conversations/connect/"
      ]
    },
    "/_main/_app/conversations/_layout": {
      "filePath": "_main/_app/conversations/_layout/route.tsx",
      "parent": "/_main/_app/conversations",
      "children": [
        "/_main/_app/conversations/_layout/$network",
        "/_main/_app/conversations/_layout/"
      ]
    },
    "/_main/_app/prospect/companies": {
      "filePath": "_main/_app/prospect/companies/route.tsx",
      "parent": "/_main/_app"
    },
    "/_main/_app/prospect/leads": {
      "filePath": "_main/_app/prospect/leads/route.tsx",
      "parent": "/_main/_app"
    },
    "/_main/_app/companies/$companyId": {
      "filePath": "_main/_app/companies/$companyId/_layout",
      "parent": "/_main/_app",
      "children": [
        "/_main/_app/companies/$companyId/_layout"
      ]
    },
    "/_main/_app/companies/$companyId/_layout": {
      "filePath": "_main/_app/companies/$companyId/_layout/route.tsx",
      "parent": "/_main/_app/companies/$companyId",
      "children": [
        "/_main/_app/companies/$companyId/_layout/ai-insights",
        "/_main/_app/companies/$companyId/_layout/",
        "/_main/_app/companies/$companyId/_layout/contacts",
        "/_main/_app/companies/$companyId/_layout/deals",
        "/_main/_app/companies/$companyId/_layout/tasks",
        "/_main/_app/companies/$companyId/_layout/conversations"
      ]
    },
    "/_main/_app/conversations/_layout/$network": {
      "filePath": "_main/_app/conversations/_layout/$network/route.tsx",
      "parent": "/_main/_app/conversations/_layout",
      "children": [
        "/_main/_app/conversations/_layout/$network/$conversationId"
      ]
    },
    "/_main/_app/conversations/connect/$network": {
      "filePath": "_main/_app/conversations/connect/$network/route.tsx",
      "parent": "/_main/_app/conversations"
    },
    "/_main/_app/conversations/_layout/": {
      "filePath": "_main/_app/conversations/_layout/index/route.lazy.tsx",
      "parent": "/_main/_app/conversations/_layout"
    },
    "/_main/_app/conversations/connect/": {
      "filePath": "_main/_app/conversations/connect/index/route.lazy.tsx",
      "parent": "/_main/_app/conversations"
    },
    "/_main/_app/companies/$companyId/_layout/ai-insights": {
      "filePath": "_main/_app/companies/$companyId/_layout/ai-insights/route.tsx",
      "parent": "/_main/_app/companies/$companyId/_layout"
    },
    "/_main/_app/conversations/_layout/$network/$conversationId": {
      "filePath": "_main/_app/conversations/_layout/$network/$conversationId/route.tsx",
      "parent": "/_main/_app/conversations/_layout/$network"
    },
    "/_main/_app/companies/$companyId/_layout/": {
      "filePath": "_main/_app/companies/$companyId/_layout/index/route.lazy.tsx",
      "parent": "/_main/_app/companies/$companyId/_layout"
    },
    "/_main/_app/companies/$companyId/_layout/contacts": {
      "filePath": "_main/_app/companies/$companyId/_layout/contacts/route.lazy.tsx",
      "parent": "/_main/_app/companies/$companyId/_layout"
    },
    "/_main/_app/companies/$companyId/_layout/deals": {
      "filePath": "_main/_app/companies/$companyId/_layout/deals/route.lazy.tsx",
      "parent": "/_main/_app/companies/$companyId/_layout"
    },
    "/_main/_app/companies/$companyId/_layout/tasks": {
      "filePath": "_main/_app/companies/$companyId/_layout/tasks/route.lazy.tsx",
      "parent": "/_main/_app/companies/$companyId/_layout"
    },
    "/_main/_app/companies/$companyId/_layout/conversations": {
      "filePath": "_main/_app/companies/$companyId/_layout/conversations/_layout",
      "parent": "/_main/_app/companies/$companyId/_layout",
      "children": [
        "/_main/_app/companies/$companyId/_layout/conversations/_layout"
      ]
    },
    "/_main/_app/companies/$companyId/_layout/conversations/_layout": {
      "filePath": "_main/_app/companies/$companyId/_layout/conversations/_layout/route.tsx",
      "parent": "/_main/_app/companies/$companyId/_layout/conversations",
      "children": [
        "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network",
        "/_main/_app/companies/$companyId/_layout/conversations/_layout/"
      ]
    },
    "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network": {
      "filePath": "_main/_app/companies/$companyId/_layout/conversations/_layout/$network/route.tsx",
      "parent": "/_main/_app/companies/$companyId/_layout/conversations/_layout",
      "children": [
        "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network/$conversationId"
      ]
    },
    "/_main/_app/companies/$companyId/_layout/conversations/_layout/": {
      "filePath": "_main/_app/companies/$companyId/_layout/conversations/_layout/index/route.lazy.tsx",
      "parent": "/_main/_app/companies/$companyId/_layout/conversations/_layout"
    },
    "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network/$conversationId": {
      "filePath": "_main/_app/companies/$companyId/_layout/conversations/_layout/$network/$conversationId/route.tsx",
      "parent": "/_main/_app/companies/$companyId/_layout/conversations/_layout/$network"
    }
  }
}
ROUTE_MANIFEST_END */
